{
	"info": {
		"_postman_id": "30afd29e-70f0-4d7a-8054-19deb5a13b37",
		"name": "Diagnostico",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22899576"
	},
	"item": [
		{
			"name": "create paciente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response should have the correct schema\", function () {\r",
							"    pm.response.to.have.jsonSchema({\r",
							"        type: \"object\",\r",
							"        required: [\"id\", \"nombre\", \"genero\"],\r",
							"        properties: {\r",
							"            id: { type: \"string\" },\r",
							"            nombre: { type: \"string\" },\r",
							"            genero: { type: \"string\" }\r",
							"        }\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\":\"123e4567-e89b-12d3-a456-426614174000\",\r\n  \"nombre\": \"Ana López\",\r\n  \"genero\": \"F\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/pacientes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"pacientes"
					]
				}
			},
			"response": []
		},
		{
			"name": "create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.id).to.exist;\r",
							"    pm.expect(responseData.nombre).to.exist;\r",
							"    pm.expect(responseData.descripcion).to.exist;\r",
							"    pm.expect(responseData.paciente).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Id and paciente.id must be non-empty strings\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r",
							"  pm.expect(responseData.paciente.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Paciente id should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is within an acceptable range\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\":\"123e4567-e89b-12d3-a456-426614174000\",\r\n  \"nombre\": \"Gripe Estacional\",\r\n  \"descripcion\": \"Diagnóstico para un cuadro gripal leve\",\r\n  \"paciente\": {\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/diagnosticos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"diagnosticos"
					]
				}
			},
			"response": []
		},
		{
			"name": "findAll",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the schema for the response fields - id, nombre, and descripcion\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    responseData.forEach((item) => {\r",
							"        pm.expect(item).to.be.an('object');\r",
							"        pm.expect(item).to.have.property('id');\r",
							"        pm.expect(item).to.have.property('nombre');\r",
							"        pm.expect(item).to.have.property('descripcion');\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/diagnosticos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"diagnosticos"
					]
				}
			},
			"response": []
		},
		{
			"name": "findOne",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - id, nombre, and descripcion\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.id).to.exist;\r",
							"    pm.expect(responseData.nombre).to.exist;\r",
							"    pm.expect(responseData.descripcion).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Id is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should be a non-empty string\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Nombre and descripcion should be non-empty strings\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.nombre).to.be.a('string').and.to.have.length.at.least(1, \"Nombre should not be empty\");\r",
							"  pm.expect(responseData.descripcion).to.be.a('string').and.to.have.length.at.least(1, \"Descripcion should not be empty\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/diagnosticos/123e4567-e89b-12d3-a456-426614174000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"diagnosticos",
						"123e4567-e89b-12d3-a456-426614174000"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response body is null\", function () {\r",
							"    const responseData = xml2Json(pm.response.text());\r",
							"    pm.expect(responseData).to.be.null;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/diagnosticos/123e4567-e89b-12d3-a456-426614174000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"diagnosticos",
						"123e4567-e89b-12d3-a456-426614174000"
					]
				}
			},
			"response": []
		}
	]
}